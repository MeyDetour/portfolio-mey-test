<?php

namespace ContainerLUegYq8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getApiControllergetTechnologiesService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.bGFNyKc.App\Controller\ApiController::getTechnologies()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.bGFNyKc.App\\Controller\\ApiController::getTechnologies()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'imageService' => ['privates', 'App\\Service\\ImageService', 'getImageServiceService', true],
            'technologyRepository' => ['privates', 'App\\Repository\\TechnologyRepository', 'getTechnologyRepositoryService', true],
        ], [
            'imageService' => 'App\\Service\\ImageService',
            'technologyRepository' => 'App\\Repository\\TechnologyRepository',
        ]))->withContext('App\\Controller\\ApiController::getTechnologies()', $container);
    }
}
