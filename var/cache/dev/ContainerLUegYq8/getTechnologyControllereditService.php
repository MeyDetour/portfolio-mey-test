<?php

namespace ContainerLUegYq8;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getTechnologyControllereditService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private '.service_locator.eRsas9a.App\Controller\TechnologyController::edit()' shared service.
     *
     * @return \Symfony\Component\DependencyInjection\ServiceLocator
     */
    public static function do($container, $lazyLoad = true)
    {
        return $container->privates['.service_locator.eRsas9a.App\\Controller\\TechnologyController::edit()'] = (new \Symfony\Component\DependencyInjection\Argument\ServiceLocator($container->getService ??= $container->getService(...), [
            'manager' => ['services', 'doctrine.orm.default_entity_manager', 'getDoctrine_Orm_DefaultEntityManagerService', false],
            'technology' => ['privates', 'App\\Entity\\Technology', 'getTechnologyService', true],
            'technologyRepository' => ['privates', 'App\\Repository\\TechnologyRepository', 'getTechnologyRepositoryService', true],
        ], [
            'manager' => '?',
            'technology' => 'App\\Entity\\Technology',
            'technologyRepository' => 'App\\Repository\\TechnologyRepository',
        ]))->withContext('App\\Controller\\TechnologyController::edit()', $container);
    }
}
